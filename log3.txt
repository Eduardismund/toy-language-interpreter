
------- Current Program State ------
ID = 3
executionStack = 
|(bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))|

, symbolTable = {}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|bool a|
|(int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v))))|

, symbolTable = {}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|(int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v))))|

, symbolTable = {a -> false}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|int v|
|(a = true; (if (a) then (v = 2) else (v = 3); print(v)))|

, symbolTable = {a -> false}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|(a = true; (if (a) then (v = 2) else (v = 3); print(v)))|

, symbolTable = {a -> false, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|a = true|
|(if (a) then (v = 2) else (v = 3); print(v))|

, symbolTable = {a -> false, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|(if (a) then (v = 2) else (v = 3); print(v))|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|if (a) then (v = 2) else (v = 3)|
|print(v)|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|v = 2|
|print(v)|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 
|print(v)|

, symbolTable = {a -> true, v -> 2}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 3
executionStack = 

, symbolTable = {a -> true, v -> 2}
, output = [2]
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|bool a|
|(int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v))))|

, symbolTable = {}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|(int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v))))|

, symbolTable = {a -> false}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|int v|
|(a = true; (if (a) then (v = 2) else (v = 3); print(v)))|

, symbolTable = {a -> false}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|(a = true; (if (a) then (v = 2) else (v = 3); print(v)))|

, symbolTable = {a -> false, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|a = true|
|(if (a) then (v = 2) else (v = 3); print(v))|

, symbolTable = {a -> false, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|(if (a) then (v = 2) else (v = 3); print(v))|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|if (a) then (v = 2) else (v = 3)|
|print(v)|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|v = 2|
|print(v)|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 
|print(v)|

, symbolTable = {a -> true, v -> 2}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 2
executionStack = 

, symbolTable = {a -> true, v -> 2}
, output = [2]
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|bool a|
|(int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v))))|

, symbolTable = {}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|(int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v))))|

, symbolTable = {a -> false}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|int v|
|(a = true; (if (a) then (v = 2) else (v = 3); print(v)))|

, symbolTable = {a -> false}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|(a = true; (if (a) then (v = 2) else (v = 3); print(v)))|

, symbolTable = {a -> false, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|a = true|
|(if (a) then (v = 2) else (v = 3); print(v))|

, symbolTable = {a -> false, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|(if (a) then (v = 2) else (v = 3); print(v))|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|if (a) then (v = 2) else (v = 3)|
|print(v)|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|v = 2|
|print(v)|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|print(v)|

, symbolTable = {a -> true, v -> 2}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 

, symbolTable = {a -> true, v -> 2}
, output = [2]
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|bool a|
|(int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v))))|

, symbolTable = {}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|(int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v))))|

, symbolTable = {a -> false}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|int v|
|(a = true; (if (a) then (v = 2) else (v = 3); print(v)))|

, symbolTable = {a -> false}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|(a = true; (if (a) then (v = 2) else (v = 3); print(v)))|

, symbolTable = {a -> false, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|a = true|
|(if (a) then (v = 2) else (v = 3); print(v))|

, symbolTable = {a -> false, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|(if (a) then (v = 2) else (v = 3); print(v))|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|if (a) then (v = 2) else (v = 3)|
|print(v)|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|v = 2|
|print(v)|

, symbolTable = {a -> true, v -> 0}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 
|print(v)|

, symbolTable = {a -> true, v -> 2}
, output = []
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


------- Current Program State ------
ID = 1
executionStack = 

, symbolTable = {a -> true, v -> 2}
, output = [2]
, fileTable = {}
, heap = {}
, originalProgram = (bool a; (int v; (a = true; (if (a) then (v = 2) else (v = 3); print(v)))))


